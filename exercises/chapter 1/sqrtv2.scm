(define precision 0.0001)
(define (abs x)
    (if (< x 0) (- x) x))
(define (avg v1 v2)
    (/ (+ v1 v2) 2))
(define (square value) 
    (* value value))
(define (good-enough? prev-guess guess x precision)
    (or
        (< (abs (- guess x)) precision)
        (< (abs (- guess prev-guess)) precision)
    ))
(define (next-guess guess x)
    (avg guess (/ x guess)))
(define (sqrt x)
    (sqrt-iter 0 (/ x 2.0) x precision))
    (define (sqrt-iter prev-guess guess x precision)
        (if (good-enough? (square prev-guess) (square guess) x precision) guess (sqrt-iter guess (next-guess guess x) x precision)))
(newline)
(display "---------")
(newline)
(display "sqrt 8 -> ") (display (sqrt 8))
(newline)
(display "---------")
(newline)
(display "sqrt 16 -> ") (display (sqrt 16))
(newline)
(display "---------")
(newline)
(display "sqrt 0.5 -> ") (display (sqrt 0.5))
(newline)
(display "---------")
(newline)
(display "sqrt 18890 -> ") (display (sqrt 18890))
(newline)
(display "---------")
(newline)
(display "sqrt 188990876 -> ") (display (sqrt 188990876))
(newline)
(display "---------")
(newline)
(display "sqrt 0.000006 -> ") (display (sqrt 0.000006))
(newline)
(display "---------")
(newline)
(display "sqrt 1889908761242342123435133123512354314667346753143 -> ") (display (sqrt 1889908761242342123435133123512354314667346753143))
(newline)
(exit)