(define (new-if predicate then-clause else-clause)
    (cond (predicate then-clause)
        (else else-clause)))
(define (true-branch) (display "true") (newline))
(define (false-branch) (display "false") (newline))
(display "new-if (< 3 4) -> ")(new-if (< 3 4) (true-branch) (false-branch))
(display "new-if (< 5 4) -> ")(new-if (< 5 4) (true-branch) (false-branch))
(display "new-if (< 3 4) -> ")(new-if (< 3 4) (display 1) (display 0))
(newline)
(display "new-if (< 5 4) -> ")(new-if (< 5 4) (display 1) (display 0))
(newline)
(display "if (< 3 4) -> ")(if (< 3 4) (true-branch) (false-branch))
(display "if (< 5 4) -> ")(if (< 5 4) (true-branch) (false-branch))
(display "if (< 3 4) -> ")(if (< 3 4) (display 1) (display 0))
(newline)
(display "if (< 5 4) -> ")(if (< 5 4) (display 1) (display 0))
(newline)
(exit)