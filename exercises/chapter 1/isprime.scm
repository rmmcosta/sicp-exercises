(define (isprime? n)
    (define (isdivisible? n counter)
        (if (= (remainder n counter) 0) #t #f))
    (define (isprime-iter n counter)
        (if (= counter n) #t (if (isdivisible? n counter) #f (isprime-iter n (+ counter 1)))))
    (isprime-iter n 2))
(newline)
(display "isprime? 2") (display (isprime? 2))
(newline)
(display "isprime? 3") (display (isprime? 3))
(newline)
(display "isprime? 4") (display (isprime? 4))
(newline)
(display "isprime? 5") (display (isprime? 5))
(newline)
(display "isprime? 6") (display (isprime? 6))
(newline)
(display "isprime? 7") (display (isprime? 7))
(newline)
(display "isprime? 16") (display (isprime? 16))
(newline)
(display "isprime? 17") (display (isprime? 17))
(newline)
(exit)
    